{"version":3,"file":"static/js/150.df96a272.chunk.js","mappings":"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","sources":["tableHelpers/getNumberOfPages.ts","config.ts","tableHelpers/getSinglePageData.ts","types/types.ts","models/toArray.ts","models/columns.ts","tableHelpers/sorting.ts","tableHelpers/filtrate.ts","hooks/useGetBookTableData/getTableDataWorker.ts","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import { BooksState } from \"types\";\r\nimport { ITEMS_PER_PAGE } from \"config\";\r\n\r\n/**\r\n * calculates number of pages which is later applied in pagination\r\n * @param ary\r\n * @returns number of pages as integer\r\n */\r\nexport const getNumberOfPages = (ary: BooksState[\"books\"]): number => {\r\n    return Math.ceil(ary.length / ITEMS_PER_PAGE);\r\n};\r\n\r\nexport default getNumberOfPages;\r\n","export const sourceGoogleFields = [\"inauthor\", \"intitle\", \"subject\"];\r\nexport const ITEMS_PER_PAGE = 5;\r\nexport const GOOGLE_API = \"https://www.googleapis.com/books/v1/volumes/\";\r\n\r\nexport const DETAILS_FIELDS =\r\n    \"?fields = volumeInfo/title, volumeInfo/imageLinks/smallThumbnail/linkToCover,volumeInfo/authors, volumeInfo/publisher, volumeInfo/publishedDate, volumeInfo/language,volumeInfo/pageCount, volumeInfo/categories,volumeInfo/description, volumeInfo/industryIdentifiers, volumeInfo/printType, saleInfo/saleability, saleInfo/isEbook, saleInfo/listPrice, saleInfo/retailPrice, saleInfo/buyLink, accessInfo/webReaderLink, accessInfo/textToSpeechPermission\";\r\nexport const BOOK_FIELDS = \"&fields= items(id, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle )\";\r\nexport const FAVORITE_FIELDS = \"?fields= id,kind, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle\";\r\n\r\nexport const FAVORITE_BOOK_IDENTIFIER = \"books#volume\";\r\n\r\nexport const MAX_RESULTS = 40;\r\n","import { BooksState } from \"types\";\r\nimport { ITEMS_PER_PAGE } from \"config\";\r\nimport getNumberOfPages from \"./getNumberOfPages\";\r\n\r\n/**\r\n * extracts from all data a part being given page content\r\n * @param index index of first element to be extracted in the array\r\n * @param dataArray array with data\r\n * @returns array with rows being content of current page\r\n */\r\nexport const getSinglePageData = (index: number, dataArray: BooksState[\"books\"]): BooksState[\"books\"] => {\r\n    const limit = getNumberOfPages(dataArray);\r\n    if (index > limit) index = limit;\r\n    const first = ITEMS_PER_PAGE * (index - 1);\r\n    const last = first + ITEMS_PER_PAGE > dataArray.length ? dataArray.length : first + ITEMS_PER_PAGE;\r\n\r\n    return dataArray.slice(first, last);\r\n};\r\n\r\nexport default getSinglePageData;\r\n","import { RootStateType } from \".\";\r\n\r\nexport interface BookDetails {\r\n    id: string;\r\n    volumeInfo: {\r\n        title: string;\r\n        imageLinks: {\r\n            smallThumbnail: { linkToCover: string; label: string };\r\n            thumbnail: string;\r\n            small: string;\r\n            medium: string;\r\n            large: string;\r\n            extraLarge: string;\r\n        };\r\n        authors: (string | { [key: string]: string })[];\r\n        publisher: string;\r\n        publishedDate: string;\r\n        language: string;\r\n        pageCount: number;\r\n        categories: (string | { [key: string]: string })[];\r\n        industryIdentifiers: { type: string; identifier: string }[];\r\n        description: string;\r\n        printType: string;\r\n        subtitle?: string;\r\n    };\r\n    saleInfo: {\r\n        isEbook: boolean;\r\n        saleability: string;\r\n        listPrice: { amount: number; currencyCode: string };\r\n        retailPrice: { amount: number; currencyCode: string };\r\n        buyLink: string;\r\n    };\r\n    accessInfo: {\r\n        textToSpeechPermission: string;\r\n        webReaderLink: string;\r\n    };\r\n}\r\nexport type ID = BookDetails[\"id\"];\r\n\r\nexport interface BookRecord {\r\n    id: BookDetails[\"id\"];\r\n    volumeInfo: Pick<BookDetails[\"volumeInfo\"], \"title\" | \"authors\" | \"subtitle\" | \"publishedDate\" | \"language\" | \"categories\">;\r\n}\r\n\r\nexport interface Book extends Pick<BookDetails[\"volumeInfo\"], \"title\" | \"authors\" | \"subtitle\" | \"publishedDate\" | \"language\" | \"categories\"> {\r\n    id: BookDetails[\"id\"];\r\n}\r\nexport type Books = Book[];\r\n\r\nexport type KeyOfBook = keyof Book;\r\n\r\nexport interface FavoriteRecord extends Book {\r\n    kind: string;\r\n}\r\n\r\nexport type ColumnHeaders = \"Tytuł\" | \"Autorzy\" | \"Język\" | \"Etykiety\" | \"Podtytuł\" | \"Wydano\" | \"\";\r\n\r\nexport enum SearchableFields {\r\n    authors = \"authors\",\r\n    title = \"title\",\r\n    subject = \"subject\",\r\n}\r\n\r\nexport enum NotSearchableFields {\r\n    language = \"language\",\r\n    categories = \"categories\",\r\n    subtitle = \"subtitle\",\r\n    publishedDate = \"publishedDate\",\r\n    id = \"id\",\r\n}\r\n\r\nexport type AllFields = SearchableFields | NotSearchableFields;\r\n\r\nexport type FilteringCondition = {\r\n    [Item in KeyOfBook]?: string;\r\n};\r\n\r\nexport type PathKeys = \"error\" | \"data\" | \"details\" | \"books\" | \"search\" | \"load\" | \"landing\" | \"no_page\";\r\n\r\nexport type FilterObject = Partial<Record<ColumnHeaders, string>>;\r\n\r\nexport type RoundButtons = \"removeBook\" | \"addToFavorites\" | \"showFullInfo\" | \"removeBookFromFavorites\" | \"goToShop\" | \"test\";\r\n\r\nexport type BookID = { id: ID };\r\n\r\nexport interface BooksState {\r\n    books: Books;\r\n    currentPageNumber: number;\r\n    errorMessage: string;\r\n    filter: FilteringCondition;\r\n    sort: { isSortOrderDescending: boolean; currentSortColumn: KeyOfBook | undefined };\r\n    numberOfPages: number;\r\n}\r\n\r\nexport interface GetTableDataParams {\r\n    books: RootStateType[\"books\"][\"books\"];\r\n    args: GetTableDataArgs;\r\n    old: GetTableDataArgs;\r\n}\r\n\r\nexport interface GetTableDataArgs {\r\n    pageNumber: RootStateType[\"books\"][\"currentPageNumber\"];\r\n    filter: FilteringCondition;\r\n    sort: { isSortOrderDescending: boolean; currentSortColumn: KeyOfBook | undefined };\r\n}\r\nexport interface FlatBookRecord extends Pick<BookDetails[\"volumeInfo\"], \"title\" | \"authors\" | \"subtitle\" | \"publishedDate\" | \"language\" | \"categories\"> {\r\n    id: BookDetails[\"id\"];\r\n}\r\n","function toArray<T>(obj: { [x: string | number | symbol]: T }) {\r\n  return Object.entries(obj)\r\n    .sort((a, b) => {\r\n      return +a - +b;\r\n    })\r\n    .map(item => item[1]);\r\n}\r\nexport default toArray;\r\n","import { ColumnHeaders, SearchableFields, NotSearchableFields } from \"types\";\r\nimport toArray from \"./toArray\";\r\n// this enum exclusively keeps order of columns in the table\r\nenum Columns {\r\n    title,\r\n    authors,\r\n    language,\r\n    categories,\r\n    subtitle,\r\n    publishedDate,\r\n}\r\n\r\nexport enum ContentCategoryEnum {\r\n    string,\r\n    numericalString,\r\n}\r\n\r\ntype Header = {\r\n    [key in Columns]: ColumnHeaders;\r\n};\r\n\r\ntype contentCategories = {\r\n    [key in Columns]: ContentCategoryEnum;\r\n};\r\n\r\nenum Classes {\r\n    small = \"header__cell-small\",\r\n    large = \"header__cell-large\",\r\n}\r\n\r\ntype CellClasses = {\r\n    [key in Columns]: Classes;\r\n};\r\n\r\ntype sourceFields = {\r\n    [key in Columns]: Exclude<SearchableFields | NotSearchableFields, \"subject\">;\r\n};\r\n\r\nconst headers: Header = {\r\n    [Columns.title]: \"Tytuł\",\r\n    [Columns.authors]: \"Autorzy\",\r\n    [Columns.language]: \"Język\",\r\n    [Columns.categories]: \"Etykiety\",\r\n    [Columns.subtitle]: \"Podtytuł\",\r\n    [Columns.publishedDate]: \"Wydano\",\r\n};\r\n\r\nconst contentCategoriesObject: contentCategories = {\r\n    [Columns.title]: ContentCategoryEnum.string,\r\n    [Columns.authors]: ContentCategoryEnum.string,\r\n    [Columns.language]: ContentCategoryEnum.string,\r\n    [Columns.categories]: ContentCategoryEnum.string,\r\n    [Columns.subtitle]: ContentCategoryEnum.string,\r\n    [Columns.publishedDate]: ContentCategoryEnum.numericalString,\r\n};\r\n\r\nconst contentCellClassesObject: CellClasses = {\r\n    [Columns.title]: Classes.large,\r\n    [Columns.authors]: Classes.large,\r\n    [Columns.language]: Classes.large,\r\n    [Columns.categories]: Classes.small,\r\n    [Columns.subtitle]: Classes.small,\r\n    [Columns.publishedDate]: Classes.small,\r\n};\r\n\r\nconst withButtonsObject = {\r\n    [Columns.title]: false,\r\n    [Columns.authors]: false,\r\n    [Columns.language]: true,\r\n    [Columns.categories]: false,\r\n    [Columns.subtitle]: false,\r\n    [Columns.publishedDate]: false,\r\n};\r\n\r\nconst sourceFieldsObject: sourceFields = {\r\n    [Columns.title]: SearchableFields.title,\r\n    [Columns.authors]: SearchableFields.authors,\r\n    [Columns.language]: NotSearchableFields.language,\r\n    [Columns.categories]: NotSearchableFields.categories,\r\n    [Columns.subtitle]: NotSearchableFields.subtitle,\r\n    [Columns.publishedDate]: NotSearchableFields.publishedDate,\r\n};\r\n\r\nexport const columns = {\r\n    headers: toArray(headers),\r\n    contentCategories: toArray(contentCategoriesObject),\r\n    classes: toArray(contentCellClassesObject),\r\n    withButtons: toArray(withButtonsObject),\r\n    sourceFields: [...toArray(sourceFieldsObject), NotSearchableFields.id],\r\n    fields: [...toArray(sourceFieldsObject)],\r\n};\r\n","import { AllFields, BooksState } from \"types\";\r\nimport { columns, ContentCategoryEnum } from \"models/columns\";\r\n\r\ntype TrimFunction = (arg0: string) => string;\r\ntype TrimFunctions = {\r\n    [key in ContentCategoryEnum]: TrimFunction;\r\n};\r\n\r\nconst trimFunctions: TrimFunctions = {\r\n    [ContentCategoryEnum.string]: (str: string) => {\r\n        while (str.charCodeAt(0) <= 64 && str.length > 1) {\r\n            str = str.slice(1);\r\n        }\r\n        return str;\r\n    },\r\n\r\n    [ContentCategoryEnum.numericalString]: (str: string) => {\r\n        while (str.charCodeAt(0) < 48 || str.charCodeAt(0) > 57) {\r\n            str = str.slice(1);\r\n        }\r\n        return str;\r\n    },\r\n};\r\n\r\nconst getValue = (item: any, key: string): string => {\r\n    const value = item[key];\r\n    if (Array.isArray(value)) {\r\n        return value.map(v => (typeof v === \"object\" ? Object.values(v).join(\" \") : v)).join(\", \");\r\n    }\r\n    return value ? String(value) : \"\";\r\n};\r\n\r\nconst getValueWithFallback = (item: any, key: string): string => {\r\n    const value = getValue(item, key);\r\n\r\n    // If sorting by optional fields and the field is empty, fall back to authors\r\n    // Don't fall back when sorting by authors itself or title (required fields)\r\n    if (!value && key !== \"authors\" && key !== \"title\" && key !== \"id\") {\r\n        return getValue(item, \"authors\");\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nconst hasValue = (item: any, key: string): boolean => {\r\n    const value = getValue(item, key);\r\n    return !!value;\r\n};\r\n\r\nexport const sorting = (data: BooksState[\"books\"], isSortOrderDescending: BooksState[\"sort\"][\"isSortOrderDescending\"], key: NonNullable<BooksState[\"sort\"][\"currentSortColumn\"]>) => {\r\n    if (!key) return data;\r\n    try {\r\n        if (key) {\r\n            const numericalKey = columns.sourceFields.indexOf(key as Exclude<AllFields, \"subject\">);\r\n            const trim = trimFunctions[columns.contentCategories[numericalKey] as ContentCategoryEnum];\r\n\r\n            data.sort((a, b) => {\r\n                // For optional fields that might be empty, handle empty values specially\r\n                if (key !== \"authors\" && key !== \"title\" && key !== \"id\") {\r\n                    const aHasValue = hasValue(a, key);\r\n                    const bHasValue = hasValue(b, key);\r\n\r\n                    // If one has value and other doesn't, prioritize the one with value\r\n                    if (aHasValue && !bHasValue) return -1;\r\n                    if (!aHasValue && bHasValue) return 1;\r\n\r\n                    // If both have values or both don't have values, sort normally\r\n                    const aValue = getValueWithFallback(a, key);\r\n                    const bValue = getValueWithFallback(b, key);\r\n\r\n                    if (typeof trim === \"function\") {\r\n                        return trim(aValue).localeCompare(trim(bValue));\r\n                    }\r\n\r\n                    return aValue.localeCompare(bValue);\r\n                } else {\r\n                    // For required fields (authors, title, id), use normal sorting\r\n                    // But still handle empty values (like empty arrays) specially\r\n                    const aValue = getValueWithFallback(a, key);\r\n                    const bValue = getValueWithFallback(b, key);\r\n\r\n                    // Handle empty values - they should come last even for required fields\r\n                    const aIsEmpty = !aValue;\r\n                    const bIsEmpty = !bValue;\r\n\r\n                    if (aIsEmpty && !bIsEmpty) return 1; // a is empty, should come after b\r\n                    if (!aIsEmpty && bIsEmpty) return -1; // b is empty, should come after a\r\n\r\n                    if (typeof trim === \"function\") {\r\n                        return trim(aValue).localeCompare(trim(bValue));\r\n                    }\r\n\r\n                    return aValue.localeCompare(bValue);\r\n                }\r\n            });\r\n\r\n            if (isSortOrderDescending) {\r\n                data.reverse();\r\n            }\r\n\r\n            return data;\r\n        }\r\n    } catch (err) {\r\n        console.error(\"Error in sorting function:\", err);\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nexport default sorting;\r\n","import { isEmpty } from \"lodash\";\r\nimport { BooksState, FilteringCondition, Book, KeyOfBook } from \"types\";\r\n\r\nfunction compare(filter: FilteringCondition, data: Book): boolean {\r\n    try {\r\n        for (const property in filter) {\r\n            const filterValue = filter[property as KeyOfBook];\r\n            const bookValue = data[property as KeyOfBook];\r\n\r\n            if (!filterValue || !filterValue.trim()) continue;\r\n\r\n            if (!bookValue) return false;\r\n\r\n            if (Array.isArray(bookValue)) {\r\n                const found = bookValue.some(item => {\r\n                    if (typeof item === \"string\") {\r\n                        return item.toLowerCase().includes(filterValue.toLowerCase());\r\n                    }\r\n                    if (typeof item === \"object\" && item !== null) {\r\n                        return Object.values(item).some(val => val.toString().toLowerCase().includes(filterValue.toLowerCase()));\r\n                    }\r\n                    return false;\r\n                });\r\n                if (!found) return false;\r\n            } else {\r\n                const bookValueStr = bookValue.toString().toLowerCase();\r\n                const filterValueStr = filterValue.toLowerCase();\r\n\r\n                if (!bookValueStr.includes(filterValueStr)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    } catch (error) {\r\n        console.error(\"Error in compare function:\", error);\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const filtrate = (data: BooksState[\"books\"], filtr: BooksState[\"filter\"] | undefined) => {\r\n    if (!filtr || isEmpty(filtr) || !data?.length) {\r\n        return data;\r\n    }\r\n\r\n    try {\r\n        return data.filter(book => compare(filtr, book));\r\n    } catch (error) {\r\n        console.error(\"Error in filtrate function:\", error);\r\n        return data; // Return original data if filtering fails\r\n    }\r\n};\r\n\r\nexport default filtrate;\r\n","/* eslint-disable no-restricted-globals */\r\n\r\nimport { getNumberOfPages, getSinglePageData, filtrate, sorting } from \"tableHelpers\";\r\nimport { GetTableDataParams } from \"types\";\r\nimport { isEmpty } from \"lodash/fp\";\r\n\r\nself.onmessage = (e: MessageEvent<GetTableDataParams>) => {\r\n    const { filter, sort, pageNumber } = { ...e.data.args };\r\n    const books = e.data.books;\r\n\r\n    const filteredBooks = filter && !isEmpty(filter) ? filtrate(books, filter) : books;\r\n    const sortedBooks = sort.currentSortColumn ? sorting(filteredBooks, sort.isSortOrderDescending, sort.currentSortColumn) : filteredBooks;\r\n    const singlePageData = getSinglePageData(pageNumber, sortedBooks);\r\n    const numberOfPages = getNumberOfPages(sortedBooks);\r\n    const currentPageNumber = pageNumber > numberOfPages ? numberOfPages : pageNumber;\r\n    const data = { singlePageData, currentPageNumber, numberOfPages };\r\n\r\n    self.postMessage(data);\r\n};\r\n\r\nexport {};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [555,153], function() { return __webpack_require__(2150); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"153\":\"6a90b4dd\",\"555\":\"34d790b3\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"https://kiszuriwalilibori.github.io/books/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t150: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkbooks\"] = self[\"webpackChunkbooks\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn Promise.all([\n\t\t__webpack_require__.e(555),\n\t\t__webpack_require__.e(153)\n\t]).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["ary","Math","ceil","length","index","dataArray","limit","getNumberOfPages","first","last","slice","SearchableFields","NotSearchableFields","obj","Object","entries","sort","a","b","map","item","Columns","ContentCategoryEnum","Classes","headers","_defineProperty","title","authors","language","categories","subtitle","publishedDate","contentCategoriesObject","string","numericalString","contentCellClassesObject","large","small","withButtonsObject","sourceFieldsObject","columns","toArray","contentCategories","classes","withButtons","sourceFields","concat","_toConsumableArray","id","fields","trimFunctions","str","charCodeAt","getValue","key","value","Array","isArray","v","values","join","String","getValueWithFallback","hasValue","data","isSortOrderDescending","numericalKey","indexOf","trim","aHasValue","bHasValue","aValue","bValue","localeCompare","aIsEmpty","bIsEmpty","reverse","err","console","error","filtr","isEmpty","filter","book","_ret","_loop","filterValue","property","bookValue","some","toLowerCase","includes","val","toString","bookValueStr","filterValueStr","compare","self","onmessage","e","_e$data$args","_objectSpread","args","pageNumber","books","filteredBooks","filtrate","sortedBooks","currentSortColumn","sorting","singlePageData","getSinglePageData","numberOfPages","currentPageNumber","postMessage","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","x","__webpack_exports__","O","deferred","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","splice","r","d","definition","o","defineProperty","enumerable","get","f","chunkId","Promise","all","reduce","promises","u","miniCssF","g","globalThis","this","Function","window","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","push","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}