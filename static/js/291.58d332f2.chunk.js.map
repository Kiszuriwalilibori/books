{"version":3,"file":"static/js/291.58d332f2.chunk.js","mappings":"yBAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAC/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAKC,EAAKD,GAAKH,EAAIG,GACnE,OAAOC,CACT,CCAe,SAASE,EAAmBN,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAME,QAAQP,GAAM,OAAO,EAAiBA,EAClD,CDES,CAAkBA,IELZ,SAA0BQ,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBR,IGJpC,SAAqCY,EAAGC,GACrD,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAGC,GACtD,IAAIC,EAAIC,OAAOC,UAAUC,SAASC,KAAKN,GAAGO,MAAM,GAAI,GAEpD,MADU,WAANL,GAAkBF,EAAEQ,cAAaN,EAAIF,EAAEQ,YAAYC,MAC7C,QAANP,GAAqB,QAANA,EAAoBT,MAAMM,KAAKC,GACxC,cAANE,GAAqB,2CAA2CQ,KAAKR,GAAW,EAAiBF,EAAGC,QAAxG,CALc,CAMhB,CHH2D,CAA2Bb,IILvE,WACb,MAAM,IAAIuB,UAAU,uIACtB,CJG8F,EAC9F,CKEAC,KAAKC,UAAY,SAAUC,GACvB,IA8BoBC,EA9BpBC,EAAyCF,EAAMG,KAAvCC,EAAgBF,EAAhBE,iBAEFC,GAF8BH,EAAVI,WAEE,IACtBC,EAAmB,GACnBC,EAAsD,CAAC,EAE7DC,QAAQC,YAwBYT,EAxBcG,EAyB3BH,EAAUU,KAAI,SAAAC,GAAQ,OAAIC,MAAMD,GAA8CE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,GAAC,MAzBtCF,MAAK,SAAAG,GACnEA,GAAWA,EAAQzC,SACnByC,EAAQC,SAAQ,SAAAV,GACZ,GAAsB,cAAlBA,EAAOW,OACP,GAAIX,EAAOY,MAAMC,MACbd,EAAOe,KAAKd,EAAOY,MAAMC,MAAME,SAAW,qBACvC,CACH,IAAMC,EAAQhB,EAAOY,MAAMI,MAC3BA,GAASA,EAAMhD,QAAU6B,EAAMiB,KAAIG,MAAVpB,EAAKzB,EAAS4C,GAC3C,MAEAjB,EAAOe,KAAKd,EAAOkB,OAAS,qBAAuBlB,EAAOkB,OAAS,mCAE3E,IACIrB,EAAM7B,SAAQgC,EAAOH,MAAQA,GAC7BE,EAAO/B,SAAQgC,EAAOD,OAASA,GACnCT,KAAK6B,YAAYnB,GAEzB,GACJ,EACAV,KAAK8B,QAAU,SAAUC,GACrB,OAAO,CACX,C","sources":["../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hooks/useFetchBooks.ts/fetchBooksWorker.ts"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable no-restricted-globals */\n\nimport { BookRecord } from \"types\";\n//  const test = [\n//      \"https://www.googleapis.com/books/v1/volumes?q=intitle:kotek&maxResults=40&fields= items(id, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle )&startIndex=0\",\n//      \"https://www.googleapis.com/books/v1/volumes?q=intitle:kotek&maxResults=40&fields= items(id, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle )&startIndex\",\n//  ];\n\nself.onmessage = function (event) {\n    const { arrayOfEndpoints, controller } = event.data;\n\n    const books: BookRecord[] = [];\n    const errors: string[] = [];\n    const result: { books?: BookRecord[]; errors?: string[] } = {};\n\n    Promise.allSettled(performAPICall(arrayOfEndpoints /*, controller*/)).then(results => {\n        if (results && results.length) {\n            results.forEach(result => {\n                if (result.status === \"fulfilled\") {\n                    if (result.value.error) {\n                        errors.push(result.value.error.message || \"Unknown error\");\n                    } else {\n                        const items = result.value.items;\n                        items && items.length && books.push(...items);\n                    }\n                } else {\n                    errors.push(result.reason ? \"Promise rejected: \" + result.reason : \"Promise rejected - Unknown error\");\n                }\n            });\n            if (books.length) result.books = books;\n            if (errors.length) result.errors = errors;\n            self.postMessage(result);\n        }\n    });\n};\nself.onerror = function (e) {\n    return true;\n};\n\nfunction performAPICall(endpoints: string[] /*, controller: AbortController*/) {\n    return endpoints.map(endpoint => fetch(endpoint /*, { signal: controller.signal }*/).then(res => res.json()));\n}\n\n//TODO: jeżeli jest kontroler odkomentowany to nigdy nie przestaje fetchować, przyjrzeć się bliżej temu\n"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","self","onmessage","event","endpoints","_event$data","data","arrayOfEndpoints","books","controller","errors","result","Promise","allSettled","map","endpoint","fetch","then","res","json","results","forEach","status","value","error","push","message","items","apply","reason","postMessage","onerror","e"],"sourceRoot":""}