{"version":3,"file":"static/js/402.84a2f6e6.chunk.js","mappings":"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","sources":["HOCs/withQueryClientProviderHOC.tsx","HOCs/withNavigationHOC.tsx","HOCs/withRemoveItemWariningModalHOC.tsx","HOCs/withSnackBarHOC.tsx","HOCs/withTableContainerHOC.tsx","HOCs/wrappedInLinkToSearchHOC.tsx","Pages/BooksPage/components/components/FilterField.tsx","Pages/BooksPage/components/components/TableCellRegular.tsx","Pages/BooksPage/components/components/buttons/RoundButton.tsx","Pages/BooksPage/components/components/buttons/AddToFavoritesButton.tsx","js/redux/thunks/thunkAddBookToFavorites.ts","Pages/BooksPage/components/components/buttons/GoToShopButton.tsx","Pages/BooksPage/components/components/buttons/RemoveBookButton.tsx","Pages/BooksPage/components/components/buttons/RemoveFromFavoritesButton.tsx","js/redux/thunks/thunkfetchIndividualBook.ts","Pages/BooksPage/components/components/buttons/ShowFullInfoButton.tsx","Pages/BooksPage/components/components/TableCellWithButtons.tsx","Pages/BooksPage/components/components/Cell.tsx","Pages/BooksPage/components/components/Rows.tsx","Pages/BooksPage/components/BooksTableBody.tsx","Pages/BooksPage/components/BooksTableFilter.tsx","Pages/BooksPage/components/BooksTableHeader.tsx","Pages/BooksPage/components/components/RemoveItemWarningModal.tsx"],"sourcesContent":["import * as React from \"react\";\r\n\r\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nfunction withQueryClientProviderHOC<T>(Component: React.ComponentType<T>) {\r\n    return (props: React.PropsWithChildren<T>) => (\r\n        <QueryClientProvider client={queryClient}>\r\n            <Component {...props} />\r\n        </QueryClientProvider>\r\n    );\r\n}\r\n\r\nexport default withQueryClientProviderHOC;\r\n","import * as React from \"react\";\r\n\r\nimport { NavigationFactory } from \"components\";\r\n\r\nfunction withNavigationHOC<T>(Component: React.ComponentType<T>) {\r\n  return (props: React.PropsWithChildren<T>) => (\r\n    <>\r\n      <NavigationFactory />\r\n      <Component {...props} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withNavigationHOC;\r\n","import * as React from \"react\";\r\n\r\nimport { RemoveItemWarningModal } from \"../Pages/BooksPage/components\";\r\n\r\nfunction withRemoveItemWarningModalHOC<T>(Component: React.ComponentType<T>) {\r\n    return (props: React.PropsWithChildren<T>) => (\r\n        <>\r\n            <Component {...props} />\r\n            <RemoveItemWarningModal />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRemoveItemWarningModalHOC;\r\n","import * as React from \"react\";\r\n\r\nimport { MessageSnackBar } from \"components\";\r\n\r\nfunction withSnackBarHOC<T>(Component: React.ComponentType<T>) {\r\n    return (props: React.PropsWithChildren<T>) => (\r\n        <>\r\n            <MessageSnackBar />\r\n            <Component {...props} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withSnackBarHOC;\r\n","import * as React from \"react\";\r\n\r\nfunction withTableContainerHOC<T>(Component: React.ComponentType<T>) {\r\n  return (props: React.PropsWithChildren<T>) => (\r\n    <div className=\"table__container\">\r\n      <Component {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTableContainerHOC;\r\n","import { Link } from \"react-router-dom\";\r\nimport Paths from \"Routing/Paths\";\r\n\r\nfunction wrappedInLinkToSearchHOC<T>(Component: React.ComponentType<T>) {\r\n  return (props: React.PropsWithChildren<T>) => (\r\n    <Link to={Paths.search} style={{ textDecoration: \"none\" }}>\r\n      <Component {...props} />\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default wrappedInLinkToSearchHOC;\r\n","import { withStyles } from \"@mui/styles\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\nconst FilterField = withStyles({\r\n    root: {\r\n        caretColor: \"black\",\r\n        backgroundColor: \"#FFDD40\",\r\n        \"& input\": { color: \"black\" },\r\n        \"& .MuiFormLabel-root\": {\r\n            fontSize: \"11px\",\r\n            maxWidth: \"90%\",\r\n            whiteSpace: \"normal\",\r\n            color: \"black\",\r\n            marginLeft: \"-6px\",\r\n            \"@media only screen and (max-width: 640px)\": {\r\n                fontSize: \"calc(8px + 3 * ((100vw - 320px) / 320))\",\r\n            },\r\n        },\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            border: \"1px solid #FFDD40\",\r\n            borderColor: \"#FFDD40 !important\",\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nexport default FilterField;\r\n","interface Props {\r\n    textContent: string;\r\n}\r\nexport const TableCellRegular = (props: Props): JSX.Element => {\r\n    const { textContent } = props;\r\n\r\n    return (\r\n        <td>\r\n            <span className=\"cell-regular\">{textContent}</span>\r\n        </td>\r\n        // <td className=\"cell-regular\">{textContent}</td>\r\n    );\r\n};\r\n","import { MouseEventHandler } from \"react\";\r\n\r\nimport { Buttons } from \"js/utils\";\r\nimport { RoundButtons } from \"types\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    type: RoundButtons;\r\n    clickHandler?: MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst RoundButton = (props: Props) => {\r\n    const { id, type, clickHandler } = props;\r\n\r\n    const MyIconButton = Buttons.createIconButton(type);\r\n    const MyImage = Buttons.createIconButtonImage(type);\r\n    const tooltipText = Buttons.getTooltipText(type);\r\n    const itemProp = Buttons.getItemProp(type);\r\n    const label = Buttons.getAriaLabel(type);\r\n\r\n    return (\r\n        <>\r\n            <MyIconButton aria-label={label} itemProp={itemProp} data-content={id} onClick={clickHandler} className=\"tooltip\">\r\n                <span className=\"tooltiptext\">{tooltipText}</span>\r\n                <MyImage />\r\n            </MyIconButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RoundButton;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { useCreateDebouncedCallback, useFavorites, useCreateRedirect } from \"hooks\";\r\nimport { thunkAddBookToFavorites, ThunkAddBookToFavoritesArgs } from \"js/redux/thunks/thunkAddBookToFavorites\";\r\n\r\nimport RoundButton from \"./RoundButton\";\r\nimport { AppDispatch } from \"types\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    thunkAddBookToFavorites: (arg0: ThunkAddBookToFavoritesArgs) => void;\r\n}\r\n\r\nexport const AddToFavoritesButton = (props: Props) => {\r\n    const { id, thunkAddBookToFavorites } = props;\r\n    const redirect = useCreateRedirect();\r\n    const { favorites } = useFavorites();\r\n    const AddToFavorites = useCreateDebouncedCallback(thunkAddBookToFavorites, {\r\n        redirect: redirect,\r\n        favorites: favorites,\r\n    });\r\n\r\n    return <RoundButton type=\"addToFavorites\" id={id} clickHandler={e => AddToFavorites(e.target)} />;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    thunkAddBookToFavorites: ({ redirect, id, favorites }: ThunkAddBookToFavoritesArgs) => dispatch(thunkAddBookToFavorites({ redirect, id, favorites })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddToFavoritesButton);\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { googleAPI } from \"config\";\r\nimport { showError, toggleSnackBar } from \"../actionCreators\";\r\nimport { Redirect, RootStateType, Favorites } from \"types\";\r\nimport { createMessageSnackBarTextContent } from \"js/utils\";\r\n\r\nexport interface ThunkAddBookToFavoritesArgs {\r\n    redirect: Redirect;\r\n    id: string;\r\n    favorites: Favorites;\r\n}\r\n\r\nexport const thunkAddBookToFavorites = ({ redirect, id, favorites }: ThunkAddBookToFavoritesArgs): ThunkAction<void, RootStateType, unknown, AnyAction> => {\r\n    return async (dispatch, getState) => {\r\n        const path = googleAPI + id;\r\n\r\n        fetch(path)\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json) {\r\n                    try {\r\n                        favorites.add(id, json);\r\n                        dispatch(toggleSnackBar(createMessageSnackBarTextContent(\"addedToFavorites\", json.volumeInfo.title)));\r\n                    } catch (error) {\r\n                        dispatch(\r\n                            showError({\r\n                                isError: true,\r\n                                errorMessage: \"An attempt to add item to local storage caused error\",\r\n                            })\r\n                        );\r\n                        redirect.error!();\r\n                    }\r\n                } else {\r\n                    redirect.not_found!();\r\n                }\r\n            })\r\n            .catch(error => {\r\n                const result = {\r\n                    isError: true,\r\n                    errorMessage: error.message,\r\n                };\r\n                dispatch(showError(result));\r\n                redirect.error!();\r\n            });\r\n    };\r\n};\r\n","import RoundButton from \"./RoundButton\";\r\nimport { goToShop } from \"js/utils\";\r\n\r\nimport { useCreateDebouncedCallback, useCreateRedirect } from \"hooks\";\r\n\r\ninterface Props {\r\n    id: string;\r\n}\r\nconst GoToShopButton = (props: Props) => {\r\n    const { id } = props;\r\n    const redirect = useCreateRedirect();\r\n    const GoToShop = useCreateDebouncedCallback(goToShop, { redirect: redirect });\r\n\r\n    return (\r\n        <RoundButton\r\n            type=\"goToShop\"\r\n            id={id}\r\n            clickHandler={e => {\r\n                GoToShop(e.target);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport default GoToShopButton;\r\n","import RoundButton from \"./RoundButton\";\r\n\r\nimport { useCreateDebouncedCallback } from \"hooks\";\r\nimport { useRemoveBookModalVisibilityContext } from \"Contexts\";\r\n\r\ninterface Props {\r\n  id: string;\r\n}\r\nconst RemoveBookButton = (props: Props) => {\r\n  const { id } = props;\r\n  const { openModal } = useRemoveBookModalVisibilityContext();\r\n  const Remove = useCreateDebouncedCallback(openModal);\r\n\r\n  return (\r\n    <RoundButton\r\n      type=\"removeBook\"\r\n      id={id}\r\n      clickHandler={e => {\r\n        Remove(e.target);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RemoveBookButton;\r\n","import debounce from \"lodash/debounce\";\r\nimport * as React from \"react\";\r\n\r\nimport { useDispatchAction, useFavorites } from \"hooks\";\r\n\r\nimport RoundButton from \"./RoundButton\";\r\n\r\ninterface Props {\r\n  id: string;\r\n}\r\n\r\nconst RemoveFromFavoritesButton = (props: Props) => {\r\n  const { id } = props;\r\n  const { removeBook: remove } = useDispatchAction();\r\n  const { favorites } = useFavorites();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const RemoveFromFavorites = React.useCallback(\r\n    debounce(target => {\r\n      const id = target?.closest(\"button\")?.dataset?.content;\r\n      if (id) {\r\n        favorites.remove(id);\r\n        remove({ id: id });\r\n      }\r\n    }, 200),\r\n    [remove]\r\n  );\r\n\r\n  return <RoundButton type=\"removeBookFromFavorites\" id={id} clickHandler={e => RemoveFromFavorites(e.target)} />;\r\n};\r\nexport default RemoveFromFavoritesButton;\r\n","import { AnyAction } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nimport { googleAPI } from \"config\";\r\nimport { fetchDetails } from \"../actionCreators\";\r\nimport { Redirect, RootStateType } from \"types\";\r\n\r\nexport interface ThunkFetchIndividualBookArgs {\r\n    redirect: Redirect;\r\n    id: string;\r\n}\r\nconst thunkFetchIndividualBook = ({ redirect, id }: ThunkFetchIndividualBookArgs): ThunkAction<void, RootStateType, unknown, AnyAction> => {\r\n    return async dispatch => {\r\n        const path = googleAPI + id;\r\n        dispatch(fetchDetails(path));\r\n        redirect.individualBook();\r\n    };\r\n};\r\n\r\nexport default thunkFetchIndividualBook;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport thunkFetchIndividualBook, { ThunkFetchIndividualBookArgs } from \"js/redux/thunks/thunkfetchIndividualBook\";\r\nimport RoundButton from \"./RoundButton\";\r\n\r\nimport { useCreateDebouncedCallback, useCreateRedirect } from \"hooks\";\r\nimport { AppDispatch } from \"types\";\r\n\r\ninterface Props {\r\n    id: string;\r\n    thunkFetchIndividualBook: (arg0: ThunkFetchIndividualBookArgs) => void;\r\n}\r\nexport const ShowFullInfoButton = (props: Props) => {\r\n    const { id, thunkFetchIndividualBook } = props;\r\n\r\n    const redirect = useCreateRedirect();\r\n\r\n    const fetchIndividualBook = useCreateDebouncedCallback(thunkFetchIndividualBook, {\r\n        redirect: redirect,\r\n    });\r\n\r\n    return (\r\n        <RoundButton\r\n            type=\"showFullInfo\"\r\n            id={id}\r\n            clickHandler={e => {\r\n                fetchIndividualBook(e.target);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    thunkFetchIndividualBook: ({ redirect, id }: ThunkFetchIndividualBookArgs) => {\r\n        dispatch(thunkFetchIndividualBook({ redirect, id }));\r\n    },\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShowFullInfoButton);\r\n","import uuid from \"react-uuid\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport { AddToFavoritesButton, GoToShopButton, RemoveBookButton, RemoveFromFavoritesButton, ShowFullInfoButton } from \"./buttons\";\r\n\r\ninterface Props {\r\n    index: number;\r\n    textContent: string;\r\n    bookID: string;\r\n    isFromFavorites: boolean;\r\n    isCacheSupported: boolean;\r\n    title: string;\r\n}\r\n\r\nexport const Cell = (props: Props) => {\r\n    let { textContent, bookID, isFromFavorites, isCacheSupported, title } = props;\r\n\r\n    return (\r\n        <td key={uuid()} role=\"group\" aria-label={`language and options for book ${title}`}>\r\n            <div className=\"cell-withButtons\">\r\n                <span>{textContent}</span>\r\n                <GoToShopButton id={bookID} />\r\n                <RemoveBookButton id={bookID} />\r\n                <ShowFullInfoButton id={bookID} />\r\n                {!isFromFavorites && isCacheSupported && <AddToFavoritesButton id={bookID} />}\r\n                {isFromFavorites && <RemoveFromFavoritesButton id={bookID} />}\r\n            </div>\r\n        </td>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    isCacheSupported: state.cache.isSupported,\r\n    isFromFavorites: !state.dataSource.isNetwork,\r\n});\r\n\r\nexport const TableCellWithButtons = connect(mapStateToProps, {})(Cell);\r\n","import uuid from \"react-uuid\";\r\n\r\nimport { TableCellRegular } from \"./TableCellRegular\";\r\nimport { TableCellWithButtons } from \"./TableCellWithButtons\";\r\nimport { columns } from \"models\";\r\n\r\n/**\r\n * checks whether given item is last item in a table\r\n * @param i item index\r\n * @param ar array of strings - ite represents all strings to be displayed in a given row an - as last item - unique code which will be not displayed\r\n * @returns  true if it is last item, false if not\r\n */\r\n\r\nconst isLastElementOfTable = (i: number, ar: string[]) => (i === ar.length - 1 ? true : false);\r\n\r\n/**\r\n * creates cell in table with books\r\n * @param textContent string that will be displayed in cell\r\n * @param index number, it will be used as React key\r\n * @param ar array of strings - ite represents all strings to be displayed in a given row an - as last item - unique code which will be not displayed\r\n * @returns component being a cell\r\n */\r\n\r\nconst Cell = (textContent: string, index: number, ar: string[]) => {\r\n    const bookInfos = [...ar];\r\n    const bookId = bookInfos.pop()!;\r\n\r\n    return columns.withButtons[index] ? <TableCellWithButtons title={bookInfos[0]} textContent={textContent} index={index} bookID={bookId} key={uuid()} /> : isLastElementOfTable(index, ar) ? null : <TableCellRegular textContent={textContent} key={uuid()} />;\r\n};\r\nexport default Cell;\r\n","import Cell from \"./Cell\";\r\n\r\nimport { BookRecordsArray } from \"types\";\r\n\r\nconst Rows = (content: BookRecordsArray) => content.map((row, index) => <tr key={index}>{row.map(Cell)}</tr>);\r\n\r\nexport default Rows;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { Rows } from \"./components\";\r\nimport { BookRecordsArray, RootStateType } from \"types\";\r\n\r\ninterface Props {\r\n    pageContent: BookRecordsArray;\r\n}\r\n\r\nexport const BooksTableBody = (props: Props) => {\r\n    const { pageContent } = props;\r\n\r\n    if (!pageContent || !pageContent.length) return null;\r\n\r\n    return <tbody>{Rows(pageContent)}</tbody>;\r\n};\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    pageContent: state.books.currentPageBooksData,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(BooksTableBody);\r\n","import * as React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { FilterField } from \"./components\";\r\nimport { useFiltersVisibilityContext } from \"Contexts\";\r\nimport { useDispatchAction } from \"hooks\";\r\nimport { columns } from \"models\";\r\nimport { HeaderItems } from \"types\";\r\n\r\ntype Filter = {\r\n    [key in HeaderItems as string]: string;\r\n};\r\n\r\nconst removeEmptyFields = (obj: Filter): Filter => {\r\n    for (const x in obj) {\r\n        if (obj[x] === \"\") delete obj[x];\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nlet BooksTableFilter = () => {\r\n    const { areFiltersVisible } = useFiltersVisibilityContext();\r\n    const { register, getValues } = useForm();\r\n    const { filterBooks } = useDispatchAction();\r\n\r\n    return areFiltersVisible ? (\r\n        <tr id=\"FiltrationArea\">\r\n            {columns.headers.map((fieldName, index) => (\r\n                <td key={uuid()}>\r\n                    <FilterField\r\n                        label={\"filtruj po \" + fieldName}\r\n                        id={fieldName}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        margin=\"none\"\r\n                        {...register(fieldName)}\r\n                        onChange={e => {\r\n                            register(fieldName).onChange(e);\r\n\r\n                            filterBooks(removeEmptyFields(getValues()));\r\n                        }}\r\n                        onMouseEnter={e => {\r\n                            const target = e.target as HTMLInputElement;\r\n                            target.focus();\r\n                        }}\r\n                    />\r\n                </td>\r\n            ))}\r\n        </tr>\r\n    ) : null;\r\n};\r\n\r\nexport default React.memo(BooksTableFilter);\r\n","import * as React from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { useDispatch, shallowEqual } from \"react-redux\";\r\n\r\nimport { columns } from \"models\";\r\nimport { Tooltip } from \"components\";\r\nimport { useTypedSelector } from \"hooks\";\r\n\r\nconst marker = (isDescending: boolean) => (isDescending ? \" \\u2191\" : \" \\u2193\");\r\n\r\nconst BooksTableHeader = () => {\r\n    const dispatch = useDispatch();\r\n    const isSortOrderDescending = useTypedSelector(state => state.books.isSortOrderDescending, shallowEqual);\r\n    const sortColumn = useTypedSelector(state => state.books.currentSortColumn, shallowEqual);\r\n\r\n    const sortBooks = React.useCallback(e => {\r\n        dispatch({ type: \"THROTTLED_SORT\", payload: e.target.cellIndex });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <tr onClick={sortBooks}>\r\n            {columns.headers.map((item, index) => (\r\n                <Tooltip title={\"Sortuj po \" + item} key={uuid()} placement=\"top-start\">\r\n                    <th role=\"columnheader\" className={`header__cell ${columns.classes[index]}`}>\r\n                        {sortColumn === index ? \" \" + item + marker(isSortOrderDescending) + \" \" : \" \" + item + \" \"}\r\n                    </th>\r\n                </Tooltip>\r\n            ))}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default BooksTableHeader;\r\n","import * as React from \"react\";\r\nimport { Modal } from \"@mui/material\";\r\n\r\nimport { useRemoveBookModalVisibilityContext } from \"Contexts\";\r\nimport { useDispatchAction } from \"hooks\";\r\nimport { Button } from \"components\";\r\n/**\r\n * @description Renders modal component with two option buttons: confirming remove and cancelling remove\r\n * @returns modal component\r\n */\r\nconst RemoveItemWarningModal = () => {\r\n    const { removeBook } = useDispatchAction();\r\n    const { closeModal, target: RemovableTarget, isVisible: isModalVisible } = useRemoveBookModalVisibilityContext();\r\n\r\n    const remove: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(() => {\r\n        RemovableTarget && removeBook(RemovableTarget);\r\n        closeModal();\r\n    }, [RemovableTarget, closeModal, removeBook]);\r\n\r\n    const cancel: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(() => {\r\n        closeModal();\r\n    }, [closeModal]);\r\n\r\n    return (\r\n        <Modal open={isModalVisible} aria-labelledby=\"Remove Book Warning\" aria-describedby=\"modal-modal-description\" role=\"dialog\">\r\n            <div className=\"PageContainer\">\r\n                <div className=\"CustomBox\">\r\n                    <p>Jesteś bliski usunięcia jednej z książek. Czy na pewno?</p>\r\n                </div>\r\n                <div className=\"search__buttons\">\r\n                    <Button onClick={remove} className=\"button--problem\" type=\"submit\">\r\n                        Usuń\r\n                    </Button>\r\n\r\n                    <Button onClick={cancel} className=\"button--ok\" type=\"reset\">\r\n                        Pozostaw\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default RemoveItemWarningModal;\r\n"],"names":["QueryClient","Component","props","className","to","Paths","search","style","textDecoration","withStyles","root","caretColor","backgroundColor","color","fontSize","maxWidth","whiteSpace","marginLeft","border","borderColor","TextField","TableCellRegular","textContent","id","type","clickHandler","MyIconButton","Buttons","createIconButton","MyImage","createIconButtonImage","tooltipText","getTooltipText","itemProp","getItemProp","label","getAriaLabel","onClick","connect","dispatch","thunkAddBookToFavorites","redirect","favorites","getState","path","googleAPI","fetch","then","res","json","add","toggleSnackBar","createMessageSnackBarTextContent","volumeInfo","title","error","showError","isError","errorMessage","not_found","catch","result","message","useCreateRedirect","useFavorites","AddToFavorites","useCreateDebouncedCallback","e","target","GoToShop","goToShop","openModal","useRemoveBookModalVisibilityContext","Remove","remove","useDispatchAction","removeBook","RemoveFromFavorites","React","debounce","closest","dataset","content","fetchDetails","individualBook","thunkFetchIndividualBook","fetchIndividualBook","TableCellWithButtons","state","isCacheSupported","cache","isSupported","isFromFavorites","dataSource","isNetwork","bookID","role","uuid","index","ar","bookInfos","bookId","pop","columns","withButtons","i","length","isLastElementOfTable","map","row","Cell","pageContent","books","currentPageBooksData","Rows","BooksTableFilter","areFiltersVisible","useFiltersVisibilityContext","useForm","register","getValues","filterBooks","headers","fieldName","size","variant","margin","onChange","obj","x","removeEmptyFields","onMouseEnter","focus","useDispatch","isSortOrderDescending","useTypedSelector","shallowEqual","sortColumn","currentSortColumn","sortBooks","payload","cellIndex","item","placement","classes","isDescending","closeModal","RemovableTarget","isModalVisible","isVisible","cancel","Modal","open"],"sourceRoot":""}