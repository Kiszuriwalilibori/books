{"version":3,"file":"static/js/134.ecf640ed.chunk.js","mappings":"yBAAO,ICaP,EAX+B,SAACA,EAAcC,GAC1C,IAAMC,EAAgBC,KAAKC,KAAKH,EDQT,ICPnBI,EAAQ,EACRC,EAAmB,GACvB,GACIA,EAAiBC,KAAKP,EDIH,GCJUK,GAC7BA,UACKA,EAAQH,GACjB,OAAOI,CACX,ECRAE,KAAKC,UAAY,SAAUC,GACvB,IAoBoBC,EApBpBC,EAA+BF,EAAMG,KAA7BC,EAAQF,EAARE,SAAUC,EAAQH,EAARG,UAoBEJ,EAlBLG,EAmBR,IAAIE,QAAQ,SAACC,EAASC,GACzBC,MAAMR,EAAK,CACPS,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGnBC,KAAK,SAAAC,GACEA,EAASC,GACTP,EAAQM,EAASE,QAEjBP,EAAO,gCAAkCK,EAASG,OAE1D,GACCC,MAAM,SAAAC,GACHV,EAAOU,EACX,EACR,IAnCKN,KAAK,SAACO,GACH,IAAQC,EAAeD,EAAfC,WACR,GAAIA,EAAY,CACZ,IAAMC,EAAYC,EAAgBjB,EAAUe,GAC5CtB,KAAKyB,YAAY,CAAEF,UAAAA,GACvB,MACIvB,KAAKyB,YAAY,CAAEC,UAAU,GAErC,GACCP,MAAM,SAAAC,GACHpB,KAAKyB,YAAY,CAAEL,MAAOA,EAAMO,SACpC,EACR,EACA3B,KAAK4B,QAAU,SAAUC,GACrB,OAAO,CACX,C","sources":["config.ts","hooks/useGetEndpoints/createEndpoints.ts","hooks/useGetEndpoints/getEndpointsWorker.ts"],"sourcesContent":["export const sourceGoogleFields = [\"inauthor\", \"intitle\", \"subject\"];\r\nexport const ITEMS_PER_PAGE = 5;\r\nexport const GOOGLE_API = \"https://www.googleapis.com/books/v1/volumes/\";\r\n\r\nexport const DETAILS_FIELDS =\r\n    \"?fields = volumeInfo/title, volumeInfo/imageLinks/smallThumbnail/linkToCover,volumeInfo/authors, volumeInfo/publisher, volumeInfo/publishedDate, volumeInfo/language,volumeInfo/pageCount, volumeInfo/categories,volumeInfo/description, volumeInfo/industryIdentifiers, volumeInfo/printType, saleInfo/saleability, saleInfo/isEbook, saleInfo/listPrice, saleInfo/retailPrice, saleInfo/buyLink, accessInfo/webReaderLink, accessInfo/textToSpeechPermission\";\r\nexport const BOOK_FIELDS = \"&fields= items(id, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle )\";\r\nexport const FAVORITE_FIELDS = \"?fields= id,kind, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle\";\r\n\r\nexport const FAVORITE_BOOK_IDENTIFIER = \"books#volume\";\r\n\r\nexport const MAX_RESULTS = 40;\r\n","import { MAX_RESULTS } from \"config\";\n\nexport const createEndpoints = (path: string, totalNumber: number) => {\n    const numberOfPages = Math.ceil(totalNumber / MAX_RESULTS);\n    let index = 0;\n    let arrayOfEndpoints = [];\n    do {\n        arrayOfEndpoints.push(path + index * MAX_RESULTS);\n        index++;\n    } while (index < numberOfPages);\n    return arrayOfEndpoints;\n};\n\nexport default createEndpoints;\n","/* eslint-disable no-restricted-globals */\r\nimport createEndpoints from \"./createEndpoints\";\r\n\r\nself.onmessage = function (event) {\r\n    const { countURL, booksURL } = event.data;\r\n\r\n    performAPICall(countURL)\r\n        .then((responseData: any) => {\r\n            const { totalItems } = responseData;\r\n            if (totalItems) {\r\n                const endpoints = createEndpoints(booksURL, totalItems);\r\n                self.postMessage({ endpoints });\r\n            } else {\r\n                self.postMessage({ notFound: true });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            self.postMessage({ error: error.message });\r\n        });\r\n};\r\nself.onerror = function (e) {\r\n    return true;\r\n};\r\n\r\nfunction performAPICall(url: string) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    resolve(response.json());\r\n                } else {\r\n                    reject(\"API call failed with status: \" + response.status);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                reject(error);\r\n            });\r\n    });\r\n}\r\n"],"names":["path","totalNumber","numberOfPages","Math","ceil","index","arrayOfEndpoints","push","self","onmessage","event","url","_event$data","data","countURL","booksURL","Promise","resolve","reject","fetch","method","headers","then","response","ok","json","status","catch","error","responseData","totalItems","endpoints","createEndpoints","postMessage","notFound","message","onerror","e"],"sourceRoot":""}