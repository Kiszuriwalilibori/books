{"version":3,"file":"static/js/985.638513a2.chunk.js","mappings":"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","sources":["Pages/SearchPage/styles.ts","Pages/SearchPage/components/FavoritesButton.tsx","js/redux/thunks/thunkFetchFromFavorites.ts","Pages/SearchPage/components/Logo.tsx","Pages/SearchPage/components/SearchField.tsx","Pages/SearchPage/utils/searchFields.ts","Pages/SearchPage/utils/createURL.ts","Pages/SearchPage/utils/model.ts","Pages/SearchPage/utils/validateInput.ts","Pages/SearchPage/SearchPage.tsx","Pages/styled.ts"],"sourcesContent":["import { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n\r\n        \"& .MuiTextField-root\": {\r\n            margin: \"8px\",\r\n            width: \"25ch\",\r\n            boxShadow: \"0 1px 1px rgba(0,0,0,0.08), 0 2px 2px rgba(0,0,0,0.12), 0 4px 4px rgba(0,0,0,0.16),0 8px 8px rgba(0,0,0,0.20);\",\r\n        },\r\n        \"& .MuiInputBase-root\": {\r\n            color: \"white !important\",\r\n            fontFamily: \"Open Sans, sans-serif !important\",\r\n            backgroundColor: \"rgba(122, 194, 33, 0.8)\",\r\n        },\r\n        \"& .MuiFormLabel-root\": { color: \"white !important\", fontFamily: \"Montserrat\" },\r\n        \"& .MuiOutlinedInput-notchedOutline\": {\r\n            border: \"3px solid\",\r\n            borderColor: \"rgb(122, 194, 33)!important\",\r\n        },\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Paths from \"Routing/Paths\";\r\n\r\nimport { Button } from \"components\";\r\nimport { useFavorites } from \"hooks\";\r\nimport { thunkFetchFromFavorites } from \"js/redux/thunks/thunkFetchFromFavorites\";\r\nimport { AppDispatch } from \"types\";\r\n\r\nexport interface Props {\r\n    fetchFromFavorites: () => void;\r\n}\r\n\r\nexport function FavoritesButton(props: Props): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const { fetchFromFavorites } = props;\r\n    const { favorites } = useFavorites();\r\n\r\n    const processFavorites = () => {\r\n        fetchFromFavorites();\r\n        navigate(Paths.books);\r\n    };\r\n\r\n    return (\r\n        <Button disabled={!favorites.containsBooks()} className=\"button--favorites\" onClick={processFavorites}>\r\n            Ulubione\r\n        </Button>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchFromFavorites: () => dispatch(thunkFetchFromFavorites()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(FavoritesButton);\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport { FilteredStorage, FormatFetchedBooks } from \"js/utils\";\r\nimport { fetchBooksFromFavorites, setIsFromNetwork } from \"../actionCreators\";\r\n\r\nexport function thunkFetchFromFavorites(): ThunkAction<void, RootStateType, unknown, AnyAction> {\r\n    return async dispatch => {\r\n        const favorites = new FilteredStorage(item => item.kind === \"books#volume\");\r\n        const result = { data: FormatFetchedBooks.Run(favorites.getAllItems()) };\r\n        dispatch(fetchBooksFromFavorites(result));\r\n        dispatch(setIsFromNetwork(false));\r\n    };\r\n}\r\n","import * as React from 'react';\r\n\r\nconst Logo = React.memo(() => <header className=\"search__logo\">Google Books Finder</header>);\r\n\r\nexport default Logo;\r\n","import { MouseEvent } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { FieldInputProps } from \"formik\";\r\nimport { Tooltip } from \"components\";\r\n\r\nexport type props = FieldInputProps<string> & {\r\n    label: string;\r\n};\r\n\r\nfunction mouseEnterHandler(event: MouseEvent<HTMLInputElement>): void {\r\n    const { target } = event;\r\n\r\n    (target as HTMLInputElement).focus();\r\n}\r\n\r\nconst SearchField = (props: props): JSX.Element => {\r\n    const { label, ...otherProps } = props;\r\n\r\n    return (\r\n        <Tooltip title=\"Nie mniej niż dwa znaki w tym jeden alfanumeryczny\" placement=\"top\">\r\n            <TextField label={label} id={props.name} size=\"small\" variant=\"outlined\" onMouseEnter={mouseEnterHandler} {...otherProps} />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default SearchField;\r\n","import { SearchableFields } from \"types\";\r\n\r\nexport enum Placeholders {\r\n    authors = \"Autor\",\r\n    title = \"Tytuł\",\r\n    subject = \"Etykiety\",\r\n}\r\ninterface SearchField {\r\n    name: SearchableFields;\r\n    placeholder: string;\r\n}\r\n\r\nexport const initialSearchFields: Array<SearchField> = [\r\n    { name: SearchableFields.authors, placeholder: Placeholders.authors },\r\n    { name: SearchableFields.title, placeholder: Placeholders.title },\r\n    { name: SearchableFields.subject, placeholder: Placeholders.subject },\r\n];\r\nclass SearchFields {\r\n    fields: Array<SearchField>;\r\n    constructor(fields: Array<SearchField>) {\r\n        this.fields = fields;\r\n    }\r\n    getPlaceholder(str: string) {\r\n        const field: SearchField = this.fields.filter((item: SearchField) => item.name === str)[0];\r\n\r\n        return field.placeholder;\r\n    }\r\n\r\n    get getSearchFieldsWithInitialValues() {\r\n        const result: { [key: string]: string } = {};\r\n        for (let obj in this.fields) {\r\n            result[this.fields[obj].name] = \"\";\r\n        }\r\n        return result;\r\n    }\r\n    get getFields() {\r\n        return this.fields;\r\n    }\r\n}\r\nconst searchFields = new SearchFields(initialSearchFields);\r\n\r\nexport default searchFields;\r\n","import fp from \"lodash/fp\";\r\nimport join from \"lodash/join\";\r\nimport { SearchFormValues } from \"./model\";\r\n\r\nexport interface BookSearchPattern {\r\n    inauthor: string;\r\n    intitle: string;\r\n    subject: string;\r\n}\r\n\r\n/**\r\n * builds full GoogleBooks API search link for certain book\r\n * @param searchKeys -  object with keys that further forms part of that link\r\n * @returns GoogleBooks API search link for certain book\r\n */\r\n\r\nconst createURL = (fields: SearchFormValues): string => {\r\n    const PATH = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n    const MAX_RESULTS = \"&maxResults=40\";\r\n    const START_INDEX = \"&startIndex=\";\r\n    const searchKeys = { inauthor: fields.authors, intitle: fields.title, subject: fields.subject };\r\n\r\n    const stringifyKeys = fp.flow(\r\n        fp.toPairs,\r\n        fp.filter(element => !(element[1] === \"\")),\r\n        fp.map(element => {\r\n            return join(element, \":\");\r\n        }),\r\n        fp.join(\"+\")\r\n    );\r\n\r\n    return PATH + stringifyKeys(searchKeys) + MAX_RESULTS + START_INDEX;\r\n};\r\n\r\nexport default createURL;\r\n","export enum SearchPageField {\r\n    AUTHORS = \"authors\",\r\n    TITLE = \"title\",\r\n    SUBJECT = \"subject\",\r\n}\r\n\r\nexport const searchPageFieldPlaceholderMap: {\r\n    [key in SearchPageField]: string;\r\n} = {\r\n    [SearchPageField.AUTHORS]: \"Autor\",\r\n    [SearchPageField.TITLE]: \"Tytuł\",\r\n    [SearchPageField.SUBJECT]: \"Etykiety\",\r\n};\r\n\r\nexport type SearchFormValues = { [key in SearchPageField]: string };\r\n\r\nexport interface ValidationState {\r\n    message: string;\r\n    isValid: boolean;\r\n}\r\n\r\nexport const initialValues: SearchFormValues = {\r\n    [SearchPageField.AUTHORS]: \"\",\r\n    [SearchPageField.TITLE]: \"\",\r\n    [SearchPageField.SUBJECT]: \"\",\r\n};\r\n\r\nexport const initialValidationState: ValidationState = { isValid: true, message: \"\" };\r\n","import pickBy from \"lodash/pickBy\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { initialValidationState, SearchFormValues } from \"./model\";\r\nimport { searchFields } from \".\";\r\nimport { SearchableFields } from \"types\";\r\n\r\ninterface resultType {\r\n    isValid: boolean;\r\n    message: string;\r\n}\r\n/**\r\n * validates input fields content.\r\n * @param fields -  object with keys and valuesthat further forms part of that link\r\n * @returns object with validation result and error message\r\n */\r\nconst validateInput = (fields: SearchFormValues) => {\r\n    let validationResult: resultType = initialValidationState;\r\n    let message: string[] = [];\r\n\r\n    const test = (item: string): boolean => {\r\n        return item.length >= 2 && /\\d|[A-z]/.test(item);\r\n    };\r\n\r\n    const searchKeys: { [index in SearchableFields as string]: string } = pickBy(fields);\r\n\r\n    if (!isEmpty(searchKeys)) {\r\n        for (let key in searchKeys) {\r\n            if (test(searchKeys[key]) === false) {\r\n                const label = searchFields.getPlaceholder(key);\r\n                validationResult = { isValid: false, message: \"Nieprawidłowe dane w polu \" + label };\r\n                message.push(label);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (validationResult.isValid === false) validationResult.message = \"Nieprawidłowe wartości w polach: \" + message.join(\", \");\r\n\r\n    return validationResult;\r\n};\r\n\r\nexport default validateInput;\r\n","import * as React from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport Paths from \"Routing/Paths\";\r\nimport PageContainer from \"Pages/styled\";\r\n\r\nimport { FavoriteButton, Logo, SearchField } from \"./components\";\r\nimport { validateInput, createURL } from \"./utils\";\r\nimport { Alert, Button, HiddenH1 } from \"components\";\r\nimport { useFetchBooks } from \"hooks/useFetchBooks\";\r\nimport { SearchFormValues, SearchPageField, searchPageFieldPlaceholderMap, initialValues, initialValidationState } from \"./utils/model\";\r\n\r\nexport const SearchPage = () => {\r\n    const classes = useStyles();\r\n    const [validated, setValidated] = React.useState(initialValidationState);\r\n    const navigate = useNavigate();\r\n    const fetchBooksFromAPI = useFetchBooks();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n    const { values, handleSubmit, getFieldProps, handleReset } = useFormik({\r\n        initialValues,\r\n        onSubmit(formValues: SearchFormValues) {\r\n            const isValidated = validateInput(formValues);\r\n            setValidated(isValidated);\r\n            if (isValidated.isValid) {\r\n                navigate(Paths.connecting);\r\n                fetchBooksFromAPI(createURL(formValues));\r\n            }\r\n        },\r\n    });\r\n\r\n    const areButtonsDisabled = React.useCallback(() => {\r\n        return Object.values(values).join(\"\") === \"\";\r\n    }, [values]);\r\n\r\n    const clearFormAndValidation: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(() => {\r\n        setValidated(initialValidationState);\r\n        handleReset(null);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <HiddenH1 label=\"Search Page\" />\r\n            <PageContainer maxWidth={false} disableGutters={true} sx={{ alignItems: \"unset\" }}>\r\n                <Logo />\r\n                <Alert shouldRender={!validated.isValid} alertMessage={validated.message} />\r\n                <form className={classes.root} id=\"search__form\">\r\n                    <div className=\"search__inputs\">\r\n                        {Object.values(SearchPageField).map((fieldName: SearchPageField) => (\r\n                            <SearchField key={fieldName} label={searchPageFieldPlaceholderMap[fieldName]} {...getFieldProps(fieldName)} />\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"search__buttons\">\r\n                        <Button form=\"search__form\" disabled={areButtonsDisabled()} onClick={handleSubmit as unknown as React.MouseEventHandler<HTMLButtonElement>} className=\"button--ok\" type=\"submit\">\r\n                            Szukaj\r\n                        </Button>\r\n\r\n                        <Button disabled={areButtonsDisabled()} onClick={clearFormAndValidation} className=\"button--problem\" type=\"reset\">\r\n                            Wyczyść\r\n                        </Button>\r\n\r\n                        <FavoriteButton />\r\n                    </div>\r\n                </form>\r\n            </PageContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { styled } from \"@mui/material/styles\";\nimport Container from \"@mui/material/Container\";\n\nexport const PageContainer = styled(Container)(({ theme }) => ({\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"100vh\",\n}));\n\nexport default PageContainer;\n"],"names":["makeStyles","theme","root","display","flexDirection","flexWrap","justifyContent","alignItems","margin","width","boxShadow","color","fontFamily","backgroundColor","border","borderColor","connect","dispatch","fetchFromFavorites","favorites","FilteredStorage","item","kind","result","data","FormatFetchedBooks","Run","getAllItems","fetchBooksFromFavorites","setIsFromNetwork","props","navigate","useNavigate","useFavorites","disabled","containsBooks","className","onClick","Paths","books","React","mouseEnterHandler","event","target","focus","Placeholders","label","otherProps","title","placement","TextField","id","name","size","variant","onMouseEnter","fields","searchKeys","inauthor","authors","intitle","subject","fp","element","join","stringifyKeys","PATH","SearchPageField","initialSearchFields","SearchableFields","placeholder","this","str","filter","obj","searchPageFieldPlaceholderMap","AUTHORS","TITLE","SUBJECT","initialValues","initialValidationState","isValid","message","validationResult","pickBy","isEmpty","key","length","test","searchFields","getPlaceholder","push","classes","useStyles","validated","setValidated","fetchBooksFromAPI","useFetchBooks","useFormik","onSubmit","formValues","isValidated","validateInput","connecting","createURL","values","handleSubmit","getFieldProps","handleReset","areButtonsDisabled","Object","clearFormAndValidation","maxWidth","disableGutters","sx","shouldRender","alertMessage","map","fieldName","form","type","PageContainer","styled","Container","minHeight"],"sourceRoot":""}