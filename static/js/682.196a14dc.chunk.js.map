{"version":3,"file":"static/js/682.196a14dc.chunk.js","mappings":"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","sources":["pages/SearchPage/components/FavoritesButton.tsx","js/redux/thunks/thunkFetchFromFavorites.ts","pages/SearchPage/components/SearchField.tsx","pages/SearchPage/utils/searchFields.ts","pages/SearchPage/utils/createURL.ts","pages/SearchPage/utils/model.ts","pages/SearchPage/utils/validateInput.ts","pages/SearchPage/SearchPage.tsx"],"sourcesContent":["import { connect } from \"react-redux\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Paths from \"routing/Paths\";\r\n\r\nimport { Button } from \"components\";\r\nimport { useFavoriteBooks } from \"hooks\";\r\nimport { thunkFetchFromFavorites } from \"js/redux/thunks/thunkFetchFromFavorites\";\r\nimport { AppDispatch, RootStateType } from \"types\";\r\n\r\nexport interface Props {\r\n    fetchFromFavorites: () => void;\r\n    isLoading: RootStateType[\"loading\"][\"isLoading\"];\r\n}\r\n\r\nexport function FavoritesButton(props: Props): JSX.Element {\r\n    const navigate = useNavigate();\r\n    const { fetchFromFavorites, isLoading } = props;\r\n    const { favoriteBooks } = useFavoriteBooks();\r\n\r\n    const processFavorites = () => {\r\n        fetchFromFavorites();\r\n        navigate(Paths.books);\r\n    };\r\n\r\n    return (\r\n        <Button disabled={!favoriteBooks.areNotEmpty() || isLoading} className=\"button--favorites\" onClick={processFavorites}>\r\n            Ulubione\r\n        </Button>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: AppDispatch) => ({\r\n    fetchFromFavorites: () => dispatch(thunkFetchFromFavorites()),\r\n});\r\n\r\nconst mapStateToProps = (state: RootStateType) => ({\r\n    isLoading: state.loading.isLoading,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesButton);\r\n","import { ThunkAction } from \"redux-thunk\";\r\nimport { AnyAction } from \"redux\";\r\n\r\nimport { RootStateType } from \"types\";\r\nimport { FilteredStorage } from \"js/utils\";\r\nimport { storeBooks, setIsFromNetwork, showError } from \"../actionCreators\";\r\nimport { FAVORITE_BOOK_IDENTIFIER } from \"config\";\r\n\r\nexport function thunkFetchFromFavorites(): ThunkAction<void, RootStateType, unknown, AnyAction> {\r\n    return dispatch => {\r\n        try {\r\n            const favorites = new FilteredStorage(item => item.kind === FAVORITE_BOOK_IDENTIFIER);\r\n            const booksRetrievedFromFavorites = favorites.getAll();\r\n            dispatch(storeBooks(booksRetrievedFromFavorites));\r\n            dispatch(setIsFromNetwork(false));\r\n        } catch (error) {\r\n            const errorMessage = error instanceof Error ? error.message : \"Podczas próby pobrania ulubionych wystąpił błąd\";\r\n            dispatch(\r\n                showError({\r\n                    isError: true,\r\n                    errorMessage: errorMessage,\r\n                })\r\n            );\r\n        }\r\n    };\r\n}\r\n","import { MouseEvent } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { FieldInputProps } from \"formik\";\r\nimport { Tooltip } from \"components\";\r\n\r\nexport type props = FieldInputProps<string> & {\r\n    label: string;\r\n    isDisabled: boolean;\r\n};\r\n\r\nfunction mouseEnterHandler(event: MouseEvent<HTMLInputElement>): void {\r\n    const { target } = event;\r\n\r\n    (target as HTMLInputElement).focus();\r\n}\r\n\r\nconst SearchField = (props: props): JSX.Element => {\r\n    const { isDisabled, label, name, ...otherProps } = props;\r\n\r\n    return (\r\n        <Tooltip role=\"tooltip\" title=\"Nie mniej niż dwa znaki w tym jeden alfanumeryczny\" placement=\"top\">\r\n            <TextField disabled={isDisabled} aria-label={`input field for ${name} field`} label={label} id={name} size=\"small\" variant=\"outlined\" onMouseEnter={mouseEnterHandler} {...otherProps} />\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default SearchField;\r\n","import { SearchableFields } from \"types\";\r\n\r\nexport enum Placeholders {\r\n    authors = \"Autor\",\r\n    title = \"Tytuł\",\r\n    subject = \"Etykiety\",\r\n}\r\ninterface SearchField {\r\n    name: SearchableFields;\r\n    placeholder: string;\r\n}\r\n\r\nexport const initialSearchFields: Array<SearchField> = [\r\n    { name: SearchableFields.authors, placeholder: Placeholders.authors },\r\n    { name: SearchableFields.title, placeholder: Placeholders.title },\r\n    { name: SearchableFields.subject, placeholder: Placeholders.subject },\r\n];\r\nclass SearchFields {\r\n    fields: Array<SearchField>;\r\n    constructor(fields: Array<SearchField>) {\r\n        this.fields = fields;\r\n    }\r\n    getPlaceholder(str: string) {\r\n        const field: SearchField = this.fields.filter((item: SearchField) => item.name === str)[0];\r\n\r\n        return field.placeholder;\r\n    }\r\n\r\n    get getSearchFieldsWithInitialValues() {\r\n        const result: { [key: string]: string } = {};\r\n        for (let obj in this.fields) {\r\n            result[this.fields[obj].name] = \"\";\r\n        }\r\n        return result;\r\n    }\r\n    get getFields() {\r\n        return this.fields;\r\n    }\r\n}\r\nconst searchFields = new SearchFields(initialSearchFields);\r\n\r\nexport default searchFields;\r\n","import fp from \"lodash/fp\";\r\nimport join from \"lodash/join\";\r\nimport { SearchFormValues } from \"./model\";\r\nimport { BOOK_FIELDS } from \"config\";\r\n\r\nexport interface BookSearchPattern {\r\n    inauthor: string;\r\n    intitle: string;\r\n    subject: string;\r\n}\r\n\r\n/**\r\n * builds full GoogleBooks API search link for certain book\r\n * @param searchKeys -  object with keys that further forms part of that link\r\n * @returns GoogleBooks API search link for certain book\r\n */\r\n\r\nconst createURL = (fields: SearchFormValues): string => {\r\n    const PATH = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n    const MAX_RESULTS = \"&maxResults=40\";\r\n    const START_INDEX = \"&startIndex=\";\r\n    const searchKeys = { inauthor: fields.authors, intitle: fields.title, subject: fields.subject };\r\n\r\n    const stringifyKeys = fp.flow(\r\n        fp.toPairs,\r\n        fp.filter(element => !(element[1] === \"\")),\r\n        fp.map(element => {\r\n            return join(element, \":\");\r\n        }),\r\n        fp.join(\"+\")\r\n    );\r\n\r\n    return PATH + stringifyKeys(searchKeys) + MAX_RESULTS + BOOK_FIELDS + START_INDEX;\r\n};\r\n\r\nexport default createURL;\r\n","export enum SearchPageField {\r\n    AUTHORS = \"authors\",\r\n    TITLE = \"title\",\r\n    SUBJECT = \"subject\",\r\n}\r\n\r\nexport const searchPageFieldPlaceholderMap: {\r\n    [key in SearchPageField]: string;\r\n} = {\r\n    [SearchPageField.AUTHORS]: \"Autor\",\r\n    [SearchPageField.TITLE]: \"Tytuł\",\r\n    [SearchPageField.SUBJECT]: \"Etykiety\",\r\n};\r\n\r\nexport type SearchFormValues = { [key in SearchPageField]: string };\r\n\r\nexport interface ValidationState {\r\n    message: string;\r\n    isValid: boolean;\r\n}\r\n\r\nexport const initialValues: SearchFormValues = {\r\n    [SearchPageField.AUTHORS]: \"\",\r\n    [SearchPageField.TITLE]: \"\",\r\n    [SearchPageField.SUBJECT]: \"\",\r\n};\r\n\r\nexport const initialValidationState: ValidationState = { isValid: true, message: \"\" };\r\n","import pickBy from \"lodash/pickBy\";\r\nimport isEmpty from \"lodash/isEmpty\";\r\nimport { initialValidationState, SearchFormValues } from \"./model\";\r\nimport { searchFields } from \".\";\r\nimport { SearchableFields } from \"types\";\r\n\r\ninterface resultType {\r\n    isValid: boolean;\r\n    message: string;\r\n}\r\n/**\r\n * validates input fields content.\r\n * @param fields -  object with keys and valuesthat further forms part of that link\r\n * @returns object with validation result and error message\r\n */\r\nconst validateInput = (fields: SearchFormValues) => {\r\n    let validationResult: resultType = initialValidationState;\r\n    let message: string[] = [];\r\n\r\n    const test = (item: string): boolean => {\r\n        return item.length >= 2 && /\\d|[A-z]/.test(item);\r\n    };\r\n\r\n    const searchKeys: { [index in SearchableFields as string]: string } = pickBy(fields);\r\n\r\n    if (!isEmpty(searchKeys)) {\r\n        for (let key in searchKeys) {\r\n            if (test(searchKeys[key]) === false) {\r\n                const label = searchFields.getPlaceholder(key);\r\n                validationResult = { isValid: false, message: \"Nieprawidłowe dane w polu \" + label };\r\n                message.push(label);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (validationResult.isValid === false) validationResult.message = \"Nieprawidłowe wartości w polach: \" + message.join(\", \");\r\n\r\n    return validationResult;\r\n};\r\n\r\nexport default validateInput;\r\n","import * as React from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nimport { shallowEqual, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\n\r\nimport { useTypedSelector } from \"hooks/useTypedSelector\";\r\nimport { FavoriteButton, SearchField } from \"./components\";\r\nimport { validateInput, createURL } from \"./utils\";\r\nimport { Alert, Button, LogoFactory } from \"components\";\r\nimport { useFetchBooks } from \"hooks/useFetchBooks\";\r\nimport { BookForm, PageContainer, SearchButtons, SearchInputs } from \"pages/styled\";\r\nimport { SearchFormValues, SearchPageField, searchPageFieldPlaceholderMap, initialValues, initialValidationState } from \"./utils/model\";\r\nimport { isOnlineSelector } from \"js/redux/reducers/onlineReducer\";\r\n\r\nexport const SearchPage = () => {\r\n    const [validated, setValidated] = React.useState(initialValidationState);\r\n    const [URL, setURL] = React.useState(\"\");\r\n\r\n    const isLoading = useTypedSelector(state => state.loading.isLoading, shallowEqual);\r\n    const isOnline = useSelector(isOnlineSelector);\r\n    const fetchBooksFromAPI = useFetchBooks();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n    const { values, handleSubmit, getFieldProps, handleReset } = useFormik({\r\n        initialValues,\r\n        onSubmit(formValues: SearchFormValues) {\r\n            const isValidated = validateInput(formValues);\r\n            setValidated(isValidated);\r\n            if (isValidated.isValid) {\r\n                setURL(createURL(formValues));\r\n            }\r\n        },\r\n    });\r\n\r\n    const isFormEmpty = React.useCallback(() => {\r\n        return Object.values(values).join(\"\") === \"\";\r\n    }, [values]);\r\n\r\n    const clearFormAndValidation: React.MouseEventHandler<HTMLButtonElement> = React.useCallback(() => {\r\n        setValidated(initialValidationState);\r\n        handleReset(null);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        let controller = new AbortController();\r\n        if (URL) {\r\n            fetchBooksFromAPI(URL, controller);\r\n        }\r\n        return () => controller?.abort();\r\n    }, [URL, fetchBooksFromAPI]);\r\n\r\n    return (\r\n        <>\r\n            <PageContainer maxWidth={false} disableGutters={true} sx={{ alignItems: \"unset\" }}>\r\n                <LogoFactory />\r\n                <Alert shouldRender={!validated.isValid} alertMessage={validated.message} />\r\n                <BookForm id=\"search__form\">\r\n                    <SearchInputs>\r\n                        {Object.values(SearchPageField).map((fieldName: SearchPageField) => (\r\n                            <SearchField key={uuid()} isDisabled={isLoading} label={searchPageFieldPlaceholderMap[fieldName]} {...getFieldProps(fieldName)} />\r\n                        ))}\r\n                    </SearchInputs>\r\n                    <SearchButtons>\r\n                        <Button form=\"search__form\" disabled={isLoading || isFormEmpty() || !isOnline} onClick={handleSubmit as unknown as React.MouseEventHandler<HTMLButtonElement>} className=\"button--ok\" type=\"submit\">\r\n                            Szukaj\r\n                        </Button>\r\n\r\n                        <Button disabled={isLoading || isFormEmpty()} onClick={clearFormAndValidation} className=\"button--problem\" type=\"reset\">\r\n                            Wyczyść\r\n                        </Button>\r\n\r\n                        <FavoriteButton />\r\n                    </SearchButtons>\r\n                </BookForm>\r\n            </PageContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"names":["connect","state","isLoading","loading","dispatch","fetchFromFavorites","booksRetrievedFromFavorites","FilteredStorage","item","kind","FAVORITE_BOOK_IDENTIFIER","getAll","storeBooks","setIsFromNetwork","error","errorMessage","Error","message","showError","isError","props","navigate","useNavigate","favoriteBooks","useFavoriteBooks","_jsx","Button","disabled","areNotEmpty","className","onClick","Paths","books","children","mouseEnterHandler","event","target","focus","Placeholders","isDisabled","label","name","otherProps","_objectWithoutProperties","_excluded","Tooltip","role","title","placement","TextField","_objectSpread","concat","id","size","variant","onMouseEnter","fields","searchKeys","inauthor","authors","intitle","subject","fp","element","join","stringifyKeys","BOOK_FIELDS","SearchPageField","initialSearchFields","SearchableFields","placeholder","SearchFields","_classCallCheck","this","_createClass","key","value","str","filter","get","result","obj","searchPageFieldPlaceholderMap","_searchPageFieldPlace","_defineProperty","AUTHORS","TITLE","SUBJECT","initialValues","_initialValues","initialValidationState","isValid","validationResult","pickBy","isEmpty","length","test","searchFields","getPlaceholder","push","_React$useState","React","_React$useState2","_slicedToArray","validated","setValidated","_React$useState3","_React$useState4","URL","setURL","useTypedSelector","shallowEqual","isOnline","useSelector","isOnlineSelector","fetchBooksFromAPI","useFetchBooks","_useFormik","useFormik","onSubmit","formValues","isValidated","validateInput","createURL","values","handleSubmit","getFieldProps","handleReset","isFormEmpty","Object","clearFormAndValidation","controller","AbortController","abort","_Fragment","_jsxs","PageContainer","maxWidth","disableGutters","sx","alignItems","LogoFactory","Alert","shouldRender","alertMessage","BookForm","SearchInputs","map","fieldName","SearchField","uuid","SearchButtons","form","type","FavoriteButton"],"sourceRoot":""}