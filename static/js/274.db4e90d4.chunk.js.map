{"version":3,"file":"static/js/274.db4e90d4.chunk.js","mappings":"yBAAO,ICkBP,EARiC,SAACA,EAAeC,EAAgCC,GACzEF,EAAQE,IAAOF,EAAQE,GAC3B,IAAMC,EDXoB,GCWMH,EAAQ,GAClCI,EAAOD,EDZa,ECYYF,EAAUI,OAASJ,EAAUI,OAASF,EDZlD,ECc1B,OAAOF,EAAUK,MAAMH,EAAOC,EAClC,ECVAG,KAAKC,UAAY,SAACC,GAEd,IAAMC,EAAOC,EAAkBF,EAAEC,KAAKE,WAAYH,EAAEC,KAAKG,MAAOJ,EAAEC,KAAKI,eAEvEP,KAAKQ,YAAYL,EACrB,C","sources":["config.ts","js/BooksManager/tableHelpers/getSinglePageData.ts","hooks/useGetTableData/getTableDataWorker.ts"],"sourcesContent":["export const sourceGoogleFields = [\"inauthor\", \"intitle\", \"subject\"];\r\nexport const ITEMS_PER_PAGE = 5;\r\nexport const GOOGLE_API = \"https://www.googleapis.com/books/v1/volumes/\";\r\n\r\nexport const DETAILS_FIELDS =\r\n    \"?fields = volumeInfo/title, volumeInfo/imageLinks/smallThumbnail/linkToCover,volumeInfo/authors, volumeInfo/publisher, volumeInfo/publishedDate, volumeInfo/language,volumeInfo/pageCount, volumeInfo/categories,volumeInfo/description, volumeInfo/industryIdentifiers, volumeInfo/printType, saleInfo/saleability, saleInfo/isEbook, saleInfo/listPrice, saleInfo/retailPrice, saleInfo/buyLink, accessInfo/webReaderLink, accessInfo/textToSpeechPermission\";\r\nexport const BOOK_FIELDS = \"&fields= items(id, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle )\";\r\nexport const FAVORITE_FIELDS = \"?fields= id,kind, volumeInfo/title, volumeInfo/authors, volumeInfo/publishedDate, volumeInfo/language, volumeInfo/categories,volumeInfo/subtitle\";\r\n\r\nexport const FAVORITE_BOOK_IDENTIFIER = \"books#volume\";\r\n\r\nexport const MAX_RESULTS = 40;\r\n// export const FAVORITE_BOOK_IDENTIFIER = { kind: \"books#volume\" };\r\n","import { BooksState } from \"types\";\r\nimport { ITEMS_PER_PAGE } from \"config\";\r\n\r\n/**\r\n * extracts from all data a part being given page content\r\n * @param index index of first element to be extracted in the array\r\n * @param dataArray array with data\r\n * @param limit number of pages in the array\r\n * @returns array with rows being content of current page\r\n */\r\nexport const getSinglePageData = (index: number, dataArray: BooksState[\"books\"], limit: number): BooksState[\"books\"] => {\r\n    if (index > limit) index = limit;\r\n    const first = ITEMS_PER_PAGE * (index - 1);\r\n    const last = first + ITEMS_PER_PAGE > dataArray.length ? dataArray.length : first + ITEMS_PER_PAGE;\r\n\r\n    return dataArray.slice(first, last);\r\n};\r\n\r\nexport default getSinglePageData;\r\n","/* eslint-disable no-restricted-globals */\n\nimport getSinglePageData from \"js/BooksManager/tableHelpers/getSinglePageData\";\n\nimport { GetTableData } from \"types\";\n\nself.onmessage = (e: MessageEvent<GetTableData>) => {\n    // const result = e.data * 2;\n    const data = getSinglePageData(e.data.pageNumber, e.data.books, e.data.numberOfPages);\n    // postMessage(result);\n    self.postMessage(data);\n};\n\nexport {};\n"],"names":["index","dataArray","limit","first","last","length","slice","self","onmessage","e","data","getSinglePageData","pageNumber","books","numberOfPages","postMessage"],"sourceRoot":""}